/*
author: Jacob Xu
date: 2/23/2020
purpose: to extend the project of warriors with pointers and 
other new knowledge 
*/
//what do I need for the assignment?
//a Nobel class, a Warrior class,
//a vector of pointers to store warrior class 
//a method for nobel to battles 
//a fire method and a hire method
//battle rule 
//operator to print Nobel and warrior 

class Warrior {
public: 
	Warrior(const string& nameOf, const int& strengthOf):
		name(nameOf), strength(strengthOf){}
private:
	string name;
	int strength;
};
class Noble {

public:
	Noble(const string& nameOf): name(nameOf){}

// methods that interact
	void battle(Noble& enemy) {

	}

	void hire(Warrior* minion) {
		army.push_back(&minion);
	}
	void fire(Warrior& minion) {

	}
//method that return self variables
private:
	string name;
	vector<Warrior*> army;

};
ostream& operator <<(ostream& os, const Noble& aNoble) {

}
ostream& operator <<(ostream& os, vector<Warrior*> army) {

}
#include <iostream>
#include <string>
#include <vector>
#include <fstream>
using namespace std;

int main() {

	Noble art("King Arthur");
	Noble lance("Lancelot du Lac");
	Noble jim("Jim");
	Noble linus("Linus Torvalds");
	Noble billie("Bill Gates");

	Warrior cheetah("Tarzan", 10);
	Warrior wizard("Merlin", 15);
	Warrior theGovernator("Conan", 12);
	Warrior nimoy("Spock", 15);
	Warrior lawless("Xena", 20);
	Warrior mrGreen("Hulk", 8);
	Warrior dylan("Hercules", 3);

	jim.hire(nimoy);
	lance.hire(theGovernator);
	art.hire(wizard);
	lance.hire(dylan);
	linus.hire(lawless);
	billie.hire(mrGreen);
	art.hire(cheetah);

	cout << "==========\n"
		<< "Status before all battles, etc.\n";
	//operator of Lords
	cout << jim << endl;
	cout << lance << endl;
	cout << art << endl;
	cout << linus << endl;
	cout << billie << endl;
	cout << "==========\n";

	art.fire(cheetah);
	cout << art << endl;

	art.battle(lance);
	jim.battle(lance);
	linus.battle(billie);
	billie.battle(lance);

	cout << "==========\n"
		<< "Status after all battles, etc.\n";
	cout << jim << endl;
	cout << lance << endl;
	cout << art << endl;
	cout << linus << endl;
	cout << billie << endl;
	cout << "==========\n";

}

